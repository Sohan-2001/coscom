/**
 * @file Firebase Security Rules for Cosmic Insights Application
 *
 * @description This ruleset enforces a strict user-ownership model, where users can only access their own data.
 *
 * @dataStructure
 * - /users/{userId}: Stores user profiles. Each user can only access their own profile data.
 * - /users/{userId}/readings/{readingId}: Stores destiny readings for each user. Each user can only access their own reading data.
 *
 * @keySecurityDecisions
 * - Users can only create their profile with the correct userId.
 * - Users can only read, update, and delete their own profile.
 * - Users can only create, read, update, and delete their own destiny readings.
 * - Listing users is disallowed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) User 'GDwf3XPeQMg4lulFpgSGlGkawI93' can create their profile at /users/GDwf3XPeQMg4lulFpgSGlGkawI93.
     * @deny (create) User 'HZhW0PjJL8NFRKvb9yTQnIeO3zX2' cannot create a profile at /users/GDwf3XPeQMg4lulFpgSGlGkawI93.
     * @allow (get, update, delete) User 'GDwf3XPeQMg4lulFpgSGlGkawI93' can read, update, and delete their profile at /users/GDwf3XPeQMg4lulFpgSGlGkawI93.
     * @deny (get, update, delete) User 'HZhW0PjJL8NFRKvb9yTQnIeO3zX2' cannot read, update, or delete the profile at /users/GDwf3XPeQMg4lulFpgSGlGkawI93.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId} {
      // Helper function to check if the user is signed in and owns the resource.
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false; // Listing users is not allowed.
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id; // Enforce immutability of userId
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to destiny reading documents within a user's profile.
     * @path /users/{userId}/readings/{readingId}
     * @allow (create) User 'GDwf3XPeQMg4lulFpgSGlGkawI93' can create a reading under their profile at /users/GDwf3XPeQMg4lulFpgSGlGkawI93/readings/someReadingId.
     * @deny (create) User 'HZhW0PjJL8NFRKvb9yTQnIeO3zX2' cannot create a reading under the profile of user 'GDwf3XPeQMg4lulFpgSGlGkawI93'.
     * @allow (get, list, update, delete) User 'GDwf3XPeQMg4lulFpgSGlGkawI93' can read, list, update, and delete their own readings under /users/GDwf3XPeQMg4lulFpgSGlGkawI93/readings/someReadingId.
     * @deny (get, list, update, delete) User 'HZhW0PjJL8NFRKvb9yTQnIeO3zX2' cannot read, list, update, or delete readings under the profile of user 'GDwf3XPeQMg4lulFpgSGlGkawI93'.
     * @principle Restricts access to a user's own data tree.
     */
    match /users/{userId}/readings/{readingId} {
       // Helper function to check if the user is signed in and owns the resource.
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

       function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.userId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userId == resource.data.userId; // Enforce immutability of userId
      allow delete: if isExistingOwner(userId);
    }
  }
}