
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Cosmic Insights application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "creationDate": {
          "type": "string",
          "description": "The date and time the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "creationDate"
      ]
    },
    "Reading": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Reading",
      "type": "object",
      "description": "Stores a generated reading for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Reading entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Reading)"
        },
        "readingDate": {
          "type": "string",
          "description": "Date the reading was generated.",
          "format": "date-time"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "birthTime": {
          "type": "string"
        },
        "birthLocation": {
          "type": "string"
        },
        "foundationalOverview": {
          "type": "string"
        },
        "careerWealthSuccess": {
          "type": "string"
        },
        "healthVitality": {
          "type": "string"
        },
        "loveRelationships": {
          "type": "string"
        },
        "personalityInnerGrowth": {
          "type": "string"
        },
        "lifePathTimeline": {
          "type": "string"
        },
        "guidanceRemedies": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "userId",
        "readingDate",
        "birthDate",
        "birthTime",
        "birthLocation",
        "foundationalOverview"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a payment order for a reading.",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "completed", "failed"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "razorpayOrderId": {
          "type": "string"
        }
      },
      "required": ["id", "userId", "amount", "status", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Uses path-based ownership for data privacy.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/readings/{readingId}",
        "definition": {
          "entityName": "Reading",
          "schema": {
            "$ref": "#/backend/entities/Reading"
          },
          "description": "Stores reading data for a specific user. Enforces path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "readingId",
              "description": "The unique identifier for the reading."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores payment orders for a user. Enforces path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "orderId",
              "description": "The unique identifier for the order."
            }
          ]
        }
      }
    ]
  }
}
